#!/usr/bin/env python3
#-*- coding: UTF-8 -*-

'''
NAME: entropy_finder.py
VERSION: 1.0
AUTHOR: Jesse Leverett (CyberThulhu)
STATUS: Complete
DESCRIPTION: This is a script which counts a character entropy in a single string.
TO-DO: N/A
USAGE: entropy_finder [-h] -s STRING [--version]
CREDIT: Borrowed from http://blog.dkbza.org/2007/05/scanning-data-for-entropy-anomalies.html
COPYRIGHT Â© 2021 Jesse Leverett
'''

# Standard Variables
__author__ = "Jesse Leverett"
__copyright__ = "Copyright (C) 2021 Jesse Leverett"
__license__ = "MIT License"
__version__ = "1.0"

# Imports
import sys
import math
import argparse
from datetime import datetime

# Instantiate Argparser
PROG_DESCRIPTION = "This is a script which counts a character entropy in a single string."
PROG_EPILOG = f"{__copyright__}"

parser = argparse.ArgumentParser( prog="entropy_finder",
                                description=PROG_DESCRIPTION,
                                epilog=PROG_EPILOG,
                                formatter_class= argparse.RawDescriptionHelpFormatter)

# Add Arguments
ISTR_HELP_TEXT = "Provided String to find Entropy"
VERS_HELP_TEXT = "Prints version information"
parser.add_argument('-s', dest="input_string", metavar='STRING', type=str, required=True, help=ISTR_HELP_TEXT)
parser.add_argument('--version', action="version", version=f" %(prog)s {__version__}", help=VERS_HELP_TEXT)

# Parse Arguments
pargs = parser.parse_args()

# Variables
BASE64_CHARS = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/="

# Defined Functions
def shannon_entropy(data:str) -> float:
    """ Finds the Entropy for a Provided String """
    try:
        if not data:
            return 0
        entropy = 0
        for x in BASE64_CHARS:
            p_x = float(data.count(x))/len(data)
            if p_x > 0:
                entropy += - p_x*math.log(p_x, 2)
        return entropy

    except Exception as e:
        print("Error: " + str(e))

def main(provided_data:str=pargs.input_string) -> str:
    """ Main Function """
    data_entropy = str(shannon_entropy(provided_data))
    return f"The entropy of a character in a string '{provided_data}' is {data_entropy} bits"

if __name__ == '__main__':
    try:
        start_time = datetime.now()
        print(main())
        end_time = datetime.now()
        exec_time = end_time - start_time
        print(f"[!] INFO: Total execution time for the function {exec_time}")
        sys.exit(0)

    except KeyboardInterrupt:
        print("[-] KEY INTERRUPT: Program will now EXIT!")
        sys.exit(1)